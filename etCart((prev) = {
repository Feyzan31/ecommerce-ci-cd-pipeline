[1mdiff --git a/frontend/src/App.jsx b/frontend/src/App.jsx[m
[1mindex b7d11d3..996f969 100644[m
[1m--- a/frontend/src/App.jsx[m
[1m+++ b/frontend/src/App.jsx[m
[36m@@ -1,17 +1,9 @@[m
 /*[m
 E-Commerce Starter (React + Tailwind)[m
 Connect√© √† un backend Express + SQLite[m
[31m-Avec syst√®me d'authentification et interface admin[m
 */[m
 [m
 import React, { useEffect, useState } from "react";[m
[31m-import { Routes, Route, Navigate, useNavigate, Link } from "react-router-dom";[m
[31m-import { useAuth } from "./context/AuthContext";[m
[31m-import Login from "./pages/Login";[m
[31m-import Register from "./pages/Register";[m
[31m-import Profile from './pages/Profile';[m
[31m-import ProtectedRoute from "./components/ProtectedRoute";[m
[31m-import Admin from "./Admin";[m
 [m
 const STORAGE_KEYS = { CART: "ecom_cart_v1", ORDERS: "ecom_orders_v1" };[m
 [m
[36m@@ -32,8 +24,7 @@[m [mfunction useLocalStorage(key, initial) {[m
   return [state, setState];[m
 }[m
 [m
[31m-// Composant Home (ton ancien App.jsx)[m
[31m-function Home() {[m
[32m+[m[32mexport default function App() {[m
   const [products, setProducts] = useState([]);[m
   const [query, setQuery] = useState("");[m
   const [category, setCategory] = useState("All");[m
[36m@@ -41,8 +32,6 @@[m [mfunction Home() {[m
   const [cart, setCart] = useLocalStorage(STORAGE_KEYS.CART, []);[m
   const [orders, setOrders] = useLocalStorage(STORAGE_KEYS.ORDERS, []);[m
   const [showCheckout, setShowCheckout] = useState(false);[m
[31m-  const { currentUser, logout } = useAuth();[m
[31m-  const navigate = useNavigate();[m
 [m
   // üîπ Charger les produits depuis le backend[m
   useEffect(() => {[m
[36m@@ -103,59 +92,33 @@[m [mfunction Home() {[m
   // üîπ Envoyer la commande au backend[m
   async function proceedCheckout(customer) {[m
     const total = cart.reduce((s, i) => s + i.price * i.qty, 0);[m
[31m-    const token = localStorage.getItem('token'); // R√©cup√©rer le token[m
[31m-[m
     try {[m
       const res = await fetch("http://localhost:4000/api/orders", {[m
         method: "POST",[m
[31m-        headers: { [m
[31m-          "Content-Type": "application/json",[m
[31m-          "Authorization": `Bearer ${token}` // Ajouter le token dans le header[m
[31m-        },[m
[31m-        body: JSON.stringify({ [m
[31m-          customer, [m
[31m-          items: cart, [m
[31m-          total[m
[31m-        }),[m
[32m+[m[32m        headers: { "Content-Type": "application/json" },[m
[32m+[m[32m        body: JSON.stringify({ customer, items: cart, total }),[m
       });[m
[31m-      [m
       const data = await res.json();[m
[31m-      if (!res.ok) throw new Error(data.error || "Erreur API");[m
[32m+[m[32m      if (!res.ok) throw new Error("Erreur API");[m
 [m
[31m-      // Mettre √† jour le state local aussi[m
       setOrders((prev) => [[m
[31m-        { [m
[31m-          id: data.id, [m
[31m-          customer, [m
[31m-          items: cart, [m
[31m-          total, [m
[31m-          createdAt: new Date().toISOString(),[m
[31m-          userId: currentUser?.id [m
[31m-        },[m
[32m+[m[32m        { id: data.id, customer, items: cart, total, createdAt: new Date().toISOString() },[m
         ...prev,[m
       ]);[m
[31m-      [m
       clearCart();[m
       setShowCheckout(false);[m
       alert("‚úÖ Commande enregistr√©e avec succ√®s !\nID: " + data.id);[m
     } catch (e) {[m
       console.error("Erreur lors de l'enregistrement de la commande :", e);[m
[31m-      alert("‚ùå Impossible d'enregistrer la commande: " + e.message);[m
[32m+[m[32m      alert("‚ùå Impossible d'enregistrer la commande. V√©rifiez le serveur backend.");[m
     }[m
   }[m
 [m
[31m-  const handleLogout = () => {[m
[31m-    logout();[m
[31m-    navigate('/');[m
[31m-  };[m
[31m-[m
   return ([m
     <div className="min-h-screen bg-gray-100 text-gray-900 w-full">[m
       <header className="bg-white shadow w-full">[m
         <div className="max-w-7xl mx-auto px-4 py-4 flex flex-col sm:flex-row items-center justify-between gap-4">[m
           <h1 className="text-2xl font-bold">MyShop</h1>[m
[31m-          [m
[31m-          {/* Barre de recherche et filtres */}[m
           <div className="flex flex-col sm:flex-row items-center gap-3 w-full sm:w-auto">[m
             <input[m
               value={query}[m
[36m@@ -181,53 +144,6 @@[m [mfunction Home() {[m
               Panier ({cart.reduce((s, i) => s + i.qty, 0)})[m
             </button>[m
           </div>[m
[31m-[m
[31m-          {/* Menu utilisateur */}[m
[31m-          <div className="flex items-center gap-4">[m
[31m-            {currentUser ? ([m
[31m-              <div className="flex items-center gap-3">[m
[31m-                {/* Lien vers l'admin si l'utilisateur est admin */}[m
[31m-                {currentUser.role === 'admin' && ([m
[31m-                  <Link[m
[31m-                    to="/admin"[m
[31m-                    className="bg-purple-600 hover:bg-purple-700 text-white px-3 py-1 rounded text-sm transition duration-200"[m
[31m-                  >[m
[31m-                    Admin[m
[31m-                  </Link>[m
[31m-                )}[m
[31m-                <Link[m
[31m-                  to="/profile"[m
[31m-                  className="text-blue-600 hover:text-blue-800 text-sm"[m
[31m-                >[m
[31m-                  Mon Profil[m
[31m-                </Link>[m
[31m-                <span className="text-sm text-gray-700">[m
[31m-                  Bonjour, {currentUser.name}[m
[31m-                </span>[m
[31m-                <button[m
[31m-                  onClick={handleLogout}[m
[31m-                  className="bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm transition duration-200"[m
[31m-                >[m
[31m-                  D√©connexion[m
[31m-                </button>[m
[31m-              </div>[m
[31m-            ) : ([m
[31m-              <div className="flex gap-2">[m
[31m-                <Link[m
[31m-                  to="/login"[m
[31m-                  className="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-sm transition duration-200"[m
[31m-                >[m
[31m-                  Connexion[m
[31m-                </Link>[m
[31m-                <Link[m
[31m-                  to="/register"[m
[31m-                  className="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm transition duration-200"[m
[31m-                >[m
[31m-                  Inscription[m
[31m-                </Link>[m
[31m-              </div>[m
[31m-            )}[m
[31m-          </div>[m
         </div>[m
       </header>[m
 [m
[36m@@ -311,17 +227,10 @@[m [mfunction Home() {[m
               </div>[m
               <div className="flex gap-2">[m
                 <button[m
[31m-                  onClick={() => {[m
[31m-                    if (!currentUser) {[m
[31m-                      alert("Veuillez vous connecter pour passer commande");[m
[31m-                      navigate('/login');[m
[31m-                      return;[m
[31m-                    }[m
[31m-                    setShowCheckout(true);[m
[31m-                  }}[m
[32m+[m[32m                  onClick={() => setShowCheckout(true)}[m
                   className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded flex-1 transition duration-200"[m
                 >[m
[31m-                  {currentUser ? "Passer commande" : "Se connecter pour commander"}[m
[32m+[m[32m                  Passer commande[m
                 </button>[m
                 <button[m
                   onClick={clearCart}[m
[36m@@ -335,72 +244,19 @@[m [mfunction Home() {[m
 [m
           <div className="mt-6 text-xs text-gray-500">[m
             Commandes enregistr√©es: {orders.length}[m
[31m-            {currentUser && ([m
[31m-              <div className="mt-2">[m
[31m-                Connect√© en tant que: {currentUser.email}[m
[31m-              </div>[m
[31m-            )}[m
           </div>[m
         </aside>[m
       </main>[m
 [m
[31m-      {/* Modal de d√©tails produit */}[m
[31m-      {selected && ([m
[31m-        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">[m
[31m-          <div className="bg-white rounded-lg shadow-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto">[m
[31m-            <div className="flex flex-col md:flex-row gap-6">[m
[31m-              <img[m
[31m-                src={selected.image || `https://picsum.photos/400/300?random=${selected.id}`}[m
[31m-                alt={selected.title}[m
[31m-                className="w-full md:w-1/2 h-64 object-cover rounded-lg"[m
[31m-              />[m
[31m-              <div className="flex-1">[m
[31m-                <h2 className="text-2xl font-bold mb-2">{selected.title}</h2>[m
[31m-                <p className="text-gray-600 mb-4">{selected.description}</p>[m
[31m-                <div className="mb-4">[m
[31m-                  <div className="text-xl font-semibold text-green-600">[m
[31m-                    {selected.price.toFixed(2)} ‚Ç¨[m
[31m-                  </div>[m
[31m-                  <div className="text-sm text-gray-500">Stock: {selected.stock}</div>[m
[31m-                </div>[m
[31m-                <div className="flex gap-2">[m
[31m-                  <button[m
[31m-                    onClick={() => {[m
[31m-                      addToCart(selected, 1);[m
[31m-                      setSelected(null);[m
[31m-                    }}[m
[31m-                    className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded transition duration-200"[m
[31m-                  >[m
[31m-                    Ajouter au panier[m
[31m-                  </button>[m
[31m-                  <button[m
[31m-                    onClick={() => setSelected(null)}[m
[31m-                    className="border border-gray-300 bg-white text-gray-700 hover:bg-gray-50 px-4 py-2 rounded transition duration-200"[m
[31m-                  >[m
[31m-                    Fermer[m
[31m-                  </button>[m
[31m-                </div>[m
[31m-              </div>[m
[31m-            </div>[m
[31m-          </div>[m
[31m-        </div>[m
[31m-      )}[m
[31m-[m
       {/* Checkout modal */}[m
       {showCheckout && ([m
         <div className="fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center p-4 z-50">[m
           <div className="bg-white rounded-lg shadow-lg p-6 w-full max-w-md max-h-[90vh] overflow-y-auto">[m
[31m-            <h3 className="text-xl font-semibold mb-4">[m
[31m-              Passer commande {currentUser && `- ${currentUser.name}`}[m
[31m-            </h3>[m
[32m+[m[32m            <h3 className="text-xl font-semibold mb-4">Passer commande</h3>[m
             {cart.length === 0 ? ([m
               <div className="text-gray-500">Votre panier est vide.</div>[m
             ) : ([m
[31m-              <CheckoutForm [m
[31m-                onCancel={() => setShowCheckout(false)} [m
[31m-                onSubmit={proceedCheckout}[m
[31m-                currentUser={currentUser}[m
[31m-              />[m
[32m+[m[32m              <CheckoutForm onCancel={() => setShowCheckout(false)} onSubmit={proceedCheckout} />[m
             )}[m
           </div>[m
         </div>[m
[36m@@ -408,17 +264,16 @@[m [mfunction Home() {[m
 [m
       <footer className="bg-white border-t mt-12 w-full">[m
         <div className="max-w-7xl mx-auto px-4 py-6 text-sm text-gray-600 text-center">[m
[31m-          ¬© MyShop - Connected Demo {currentUser && `| Connect√©: ${currentUser.name}`}[m
[32m+[m[32m          ¬© MyShop - Connected Demo[m
         </div>[m
       </footer>[m
     </div>[m
   );[m
 }[m
 [m
[31m-// CheckoutForm avec pr√©-remplissage pour les utilisateurs connect√©s[m
[31m-function CheckoutForm({ onCancel, onSubmit, currentUser }) {[m
[31m-  const [name, setName] = useState(currentUser?.name || "");[m
[31m-  const [email, setEmail] = useState(currentUser?.email || "");[m
[32m+[m[32mfunction CheckoutForm({ onCancel, onSubmit }) {[m
[32m+[m[32m  const [name, setName] = useState("");[m
[32m+[m[32m  const [email, setEmail] = useState("");[m
   const [address, setAddress] = useState("");[m
 [m
   function handleSubmit(e) {[m
[36m@@ -430,17 +285,30 @@[m [mfunction CheckoutForm({ onCancel, onSubmit, currentUser }) {[m
   return ([m
     <form onSubmit={handleSubmit} className="space-y-4">[m
       <div>[m
[31m-        <label className="block text-sm font-medium mb-1">Nom</label>[m
[32m+[m[32m        <label[m
[32m+[m[32m          htmlFor="name"[m
[32m+[m[32m          className="block text-sm font-medium mb-1"[m
[32m+[m[32m        >[m
[32m+[m[32m          Nom[m
[32m+[m[32m        </label>[m
         <input[m
[32m+[m[32m          id="name"[m
           value={name}[m
           onChange={(e) => setName(e.target.value)}[m
           className="w-full border rounded px-3 py-2"[m
           required[m
         />[m
       </div>[m
[32m+[m
       <div>[m
[31m-        <label className="block text-sm font-medium mb-1">Email</label>[m
[32m+[m[32m        <label[m
[32m+[m[32m          htmlFor="email"[m
[32m+[m[32m          className="block text-sm font-medium mb-1"[m
[32m+[m[32m        >[m
[32m+[m[32m          Email[m
[32m+[m[32m        </label>[m
         <input[m
[32m+[m[32m          id="email"[m
           type="email"[m
           value={email}[m
           onChange={(e) => setEmail(e.target.value)}[m
[36m@@ -448,16 +316,23 @@[m [mfunction CheckoutForm({ onCancel, onSubmit, currentUser }) {[m
           required[m
         />[m
       </div>[m
[32m+[m
       <div>[m
[31m-        <label className="block text-sm font-medium mb-1">Adresse</label>[m
[32m+[m[32m        <label[m
[32m+[m[32m          htmlFor="address"[m
[32m+[m[32m          className="block text-sm font-medium mb-1"[m
[32m+[m[32m        >[m
[32m+[m[32m          Adresse[m
[32m+[m[32m        </label>[m
         <textarea[m
[32m+[m[32m          id="address"[m
           value={address}[m
           onChange={(e) => setAddress(e.target.value)}[m
           className="w-full border rounded px-3 py-2"[m
           rows="3"[m
[31m-          placeholder="Adresse de livraison"[m
         />[m
       </div>[m
[32m+[m
       <div className="flex gap-2 pt-2">[m
         <button[m
           type="submit"[m
[36m@@ -476,24 +351,3 @@[m [mfunction CheckoutForm({ onCancel, onSubmit, currentUser }) {[m
     </form>[m
   );[m
 }[m
[31m-[m
[31m-// Composant App principal avec routing[m
[31m-export default function App() {[m
[31m-  return ([m
[31m-    <Routes>[m
[31m-      <Route path="/login" element={<Login />} />[m
[31m-      <Route path="/register" element={<Register />} />[m
[31m-      <Route path="/profile" element={<ProtectedRoute><Profile /></ProtectedRoute>} />[m
[31m-      <Route path="/admin" element={<ProtectedRoute><Admin /></ProtectedRoute>} />[m
[31m-      <Route [m
[31m-        path="/" [m
[31m-        element={[m
[31m-          <ProtectedRoute>[m
[31m-            <Home />[m
[31m-          </ProtectedRoute>[m
[31m-        } [m
[31m-      />[m
[31m-      <Route path="*" element={<Navigate to="/" />} />[m
[31m-    </Routes>[m
[31m-  );[m
[31m-}[m
\ No newline at end of file[m
